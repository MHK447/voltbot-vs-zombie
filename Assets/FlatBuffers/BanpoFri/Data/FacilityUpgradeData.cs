// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace BanpoFri.Data
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FacilityUpgradeData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static FacilityUpgradeData GetRootAsFacilityUpgradeData(ByteBuffer _bb) { return GetRootAsFacilityUpgradeData(_bb, new FacilityUpgradeData()); }
  public static FacilityUpgradeData GetRootAsFacilityUpgradeData(ByteBuffer _bb, FacilityUpgradeData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FacilityUpgradeData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Level { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateLevel(int level) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, level); return true; } else { return false; } }
  public int Faciltiyidx { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateFaciltiyidx(int faciltiyidx) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, faciltiyidx); return true; } else { return false; } }

  public static Offset<BanpoFri.Data.FacilityUpgradeData> CreateFacilityUpgradeData(FlatBufferBuilder builder,
      int level = 0,
      int faciltiyidx = 0) {
    builder.StartTable(2);
    FacilityUpgradeData.AddFaciltiyidx(builder, faciltiyidx);
    FacilityUpgradeData.AddLevel(builder, level);
    return FacilityUpgradeData.EndFacilityUpgradeData(builder);
  }

  public static void StartFacilityUpgradeData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(0, level, 0); }
  public static void AddFaciltiyidx(FlatBufferBuilder builder, int faciltiyidx) { builder.AddInt(1, faciltiyidx, 0); }
  public static Offset<BanpoFri.Data.FacilityUpgradeData> EndFacilityUpgradeData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<BanpoFri.Data.FacilityUpgradeData>(o);
  }
};


}
